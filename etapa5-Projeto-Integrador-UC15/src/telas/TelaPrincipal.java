package telas;

import classes.Atendimento;
import classes.AtendimentoDAO;
import classes.Auxiliar;
import classes.AuxiliarDAO;
import classes.ConvenioDAO;
import classes.Dentista;
import classes.DentistaDAO;
import classes.EspecialidadeDAO;
import classes.GastoLucro;
import classes.GastoLucroDAO;
import classes.Material;
import classes.MaterialDAO;
import classes.Paciente;
import classes.PacienteDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class TelaPrincipal extends javax.swing.JFrame {

    private final String[] colunasDentista = {"ID", "Nome", "Nascimento", "CPF", "Endereço", "Telefone", "Email", "UF(CRO)", "CRO", "Especialidade(s)"};
    DefaultTableModel tabelaPadraoDentista = new DefaultTableModel(colunasDentista, 0);

    private final String[] colunasAuxiliar = {"ID", "Nome", "Nascimento", "CPF", "Endereço", "Telefone", "Email", "UF(CRO)", "CRO"};
    DefaultTableModel tabelaPadraoAuxiliar = new DefaultTableModel(colunasAuxiliar, 0);

    private final String[] colunasMaterial = {"ID", "Nome", "Marca", "Qntd. Comprada", "Qntd. Gasta", "Qntd. em Estoque", "Valor Unitário", "Valor Total"};
    DefaultTableModel tabelaPadraoMaterial = new DefaultTableModel(colunasMaterial, 0);

    private final String[] colunasFinanceiro = {"ID", "Nome", "Tipo", "Quantidade", "Valor", "Valor Total"};
    DefaultTableModel tabelaPadraoFinanceiro = new DefaultTableModel(colunasFinanceiro, 0);

    private final String[] colunasPaciente = {"ID", "Nome", "Nascimento", "CPF", "RG", "Endereço", "Telefone", "Email", "Convênio", "Indicação", "Nome Indicação", "Observacoes"};
    DefaultTableModel tabelaPadraoPaciente = new DefaultTableModel(colunasPaciente, 0);

    private final String[] colunasAtendimento = {"ID", "Data e Hora", "Paciente", "Nº do Convênio", "Especialidade Procurada", "Dentista Marcado", "Dentista que Atendeu", "Auxiliar", "Observações", "Valor", "Tipo de Pagamento", "Parcelas", "Nº do Cartão"};
    DefaultTableModel tabelaPadraoAtendimento = new DefaultTableModel(colunasAtendimento, 0);

    //int j = 0; //variável que receberá o tipo de usuário que irá acessar o sistema.
    public TelaPrincipal() {
        initComponents();
        atualizaTabelaDentista();
        atualizaTabelaAuxiliar();
        atualizaTabelaMaterial();
        atualizaTabelaFinanceiro();
        atualizaTabelaPaciente();
        atualizaTabelaAtendimento();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTelaPrincipal = new javax.swing.JPanel();
        tabOpcoes = new javax.swing.JTabbedPane();
        pnlCirurgioesDentistas = new javax.swing.JPanel();
        btnAdicionarEspecialidade = new javax.swing.JButton();
        btnCadastrarNovoDent = new javax.swing.JButton();
        txtPesquisaDent = new javax.swing.JTextField();
        scrlpDentistas = new javax.swing.JScrollPane();
        tblDentistas = new javax.swing.JTable();
        btnPesquisaDentista = new javax.swing.JButton();
        lblPesquisaDentista = new javax.swing.JLabel();
        btnResetarTabelaDentista = new javax.swing.JButton();
        pnlAuxiliares = new javax.swing.JPanel();
        btnCadastrarNovoAux = new javax.swing.JButton();
        txtPesquisaAux = new javax.swing.JTextField();
        scrlpAuxiliares = new javax.swing.JScrollPane();
        tblAuxiliares = new javax.swing.JTable();
        lblPesquisaDentista1 = new javax.swing.JLabel();
        btnPesquisaAuxiliar = new javax.swing.JButton();
        btnResetarTabelaAuxiliar = new javax.swing.JButton();
        pnlPacientes = new javax.swing.JPanel();
        btnObservacoes = new javax.swing.JButton();
        btnCadastrarNovoPac = new javax.swing.JButton();
        txtPesquisaPac = new javax.swing.JTextField();
        scrlpPacientes = new javax.swing.JScrollPane();
        tblPacientes = new javax.swing.JTable();
        btnOdontograma = new javax.swing.JButton();
        lblPesquisaPaciente = new javax.swing.JLabel();
        btnResetaTabelaPaciente = new javax.swing.JButton();
        btnPesquisaPaciente = new javax.swing.JButton();
        pnlAtendimentos = new javax.swing.JPanel();
        btnFinalizarAtend = new javax.swing.JButton();
        btnCadastrarNovoAtend = new javax.swing.JButton();
        scrlpAtendimentos = new javax.swing.JScrollPane();
        tblAtendimentos = new javax.swing.JTable();
        btnReceita = new javax.swing.JButton();
        btnVerReceitas = new javax.swing.JButton();
        btnPesquisaAtendimento = new javax.swing.JButton();
        txtPesquisaAtend = new javax.swing.JTextField();
        lblPesquisaAtendimento = new javax.swing.JLabel();
        btnResetaTabelaAtendimento = new javax.swing.JButton();
        pnlMateriais = new javax.swing.JPanel();
        btnCadastrarNovoMat = new javax.swing.JButton();
        scrlpMateriais = new javax.swing.JScrollPane();
        tblMateriais = new javax.swing.JTable();
        btnAtualizaEstoque = new javax.swing.JButton();
        btnPesquisaMaterial = new javax.swing.JButton();
        txtPesquisaMat = new javax.swing.JTextField();
        lblPesquisaMaterial = new javax.swing.JLabel();
        btnResetaTabelaMaterial = new javax.swing.JButton();
        pnlFinanceiro = new javax.swing.JPanel();
        btnCadastrarNovoFinan = new javax.swing.JButton();
        scrlpFinanceiro = new javax.swing.JScrollPane();
        tblFinanceiro = new javax.swing.JTable();
        btnCalculaBalancoFinal = new javax.swing.JButton();
        lblPesquisaFinanceiro = new javax.swing.JLabel();
        btnResetaTabelaFinanceiro = new javax.swing.JButton();
        btnPesquisaFinanceiro = new javax.swing.JButton();
        txtPesquisaFinan = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SICODON");
        setBackground(new java.awt.Color(239, 235, 235));
        setSize(new java.awt.Dimension(954, 522));

        tabOpcoes.setBackground(new java.awt.Color(30, 48, 112));
        tabOpcoes.setForeground(new java.awt.Color(255, 255, 255));
        tabOpcoes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabOpcoes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        pnlCirurgioesDentistas.setBackground(new java.awt.Color(255, 255, 255));
        pnlCirurgioesDentistas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAdicionarEspecialidade.setBackground(new java.awt.Color(40, 75, 165));
        btnAdicionarEspecialidade.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAdicionarEspecialidade.setForeground(new java.awt.Color(255, 255, 255));
        btnAdicionarEspecialidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnAdicionarEspecialidade.setText("Adicionar especialidade(s)");
        btnAdicionarEspecialidade.setToolTipText("Adiciona uma ou várias especilaidades à um(a) cirurgiã(o)-dentista");
        btnAdicionarEspecialidade.setNextFocusableComponent(txtPesquisaDent);
        btnAdicionarEspecialidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarEspecialidadeActionPerformed(evt);
            }
        });

        btnCadastrarNovoDent.setBackground(new java.awt.Color(40, 75, 165));
        btnCadastrarNovoDent.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCadastrarNovoDent.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrarNovoDent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnCadastrarNovoDent.setText("Cadastrar novo(a)");
        btnCadastrarNovoDent.setToolTipText("Cadastra um(a) novo(a) cirurgiã(o)-dentista.");
        btnCadastrarNovoDent.setNextFocusableComponent(btnAdicionarEspecialidade);
        btnCadastrarNovoDent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarNovoDentActionPerformed(evt);
            }
        });

        txtPesquisaDent.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtPesquisaDent.setToolTipText("Barra de pesquisa");
        txtPesquisaDent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPesquisaDent.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPesquisaDent.setNextFocusableComponent(btnPesquisaDentista);
        txtPesquisaDent.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesquisaDentFocusLost(evt);
            }
        });
        txtPesquisaDent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaDentActionPerformed(evt);
            }
        });

        scrlpDentistas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scrlpDentistas.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        tblDentistas.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblDentistas.setModel(tabelaPadraoDentista);
        scrlpDentistas.setViewportView(tblDentistas);

        btnPesquisaDentista.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisaDentista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa_.png"))); // NOI18N
        btnPesquisaDentista.setText("Pesquisar");
        btnPesquisaDentista.setNextFocusableComponent(btnResetarTabelaDentista);
        btnPesquisaDentista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaDentistaActionPerformed(evt);
            }
        });

        lblPesquisaDentista.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblPesquisaDentista.setText("Pesquisar por nome da(o) Cirurgiã(o)-Dentista");

        btnResetarTabelaDentista.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnResetarTabelaDentista.setText("Resetar Tabela");
        btnResetarTabelaDentista.setNextFocusableComponent(tabOpcoes);
        btnResetarTabelaDentista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetarTabelaDentistaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCirurgioesDentistasLayout = new javax.swing.GroupLayout(pnlCirurgioesDentistas);
        pnlCirurgioesDentistas.setLayout(pnlCirurgioesDentistasLayout);
        pnlCirurgioesDentistasLayout.setHorizontalGroup(
            pnlCirurgioesDentistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCirurgioesDentistasLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlCirurgioesDentistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrlpDentistas)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCirurgioesDentistasLayout.createSequentialGroup()
                        .addComponent(btnCadastrarNovoDent, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdicionarEspecialidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                        .addGroup(pnlCirurgioesDentistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPesquisaDentista)
                            .addComponent(txtPesquisaDent, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCirurgioesDentistasLayout.createSequentialGroup()
                                .addComponent(btnPesquisaDentista)
                                .addGap(18, 18, 18)
                                .addComponent(btnResetarTabelaDentista)))))
                .addContainerGap())
        );
        pnlCirurgioesDentistasLayout.setVerticalGroup(
            pnlCirurgioesDentistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCirurgioesDentistasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPesquisaDentista)
                .addGap(5, 5, 5)
                .addGroup(pnlCirurgioesDentistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCirurgioesDentistasLayout.createSequentialGroup()
                        .addComponent(txtPesquisaDent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCirurgioesDentistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPesquisaDentista)
                            .addComponent(btnResetarTabelaDentista))
                        .addGap(18, 18, 18)
                        .addComponent(scrlpDentistas, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCadastrarNovoDent, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCadastrarNovoDent.getAccessibleContext().setAccessibleName("Cadastra novo(a) cirurgiã(o)-dentista");
        txtPesquisaDent.getAccessibleContext().setAccessibleName("Barra de pesquisa");
        txtPesquisaDent.getAccessibleContext().setAccessibleDescription("Digite um valor aqui para filtrar os valores da tabela abaixo");

        tabOpcoes.addTab("Cirurgiões-Dentistas", pnlCirurgioesDentistas);

        pnlAuxiliares.setBackground(new java.awt.Color(255, 255, 255));
        pnlAuxiliares.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnCadastrarNovoAux.setBackground(new java.awt.Color(40, 75, 165));
        btnCadastrarNovoAux.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCadastrarNovoAux.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrarNovoAux.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnCadastrarNovoAux.setText("Cadastrar novo(a)");
        btnCadastrarNovoAux.setToolTipText("Cadastra novo(a) auxiliar");
        btnCadastrarNovoAux.setNextFocusableComponent(txtPesquisaAux);
        btnCadastrarNovoAux.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarNovoAuxActionPerformed(evt);
            }
        });

        txtPesquisaAux.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtPesquisaAux.setToolTipText("Barra de pesquisa");
        txtPesquisaAux.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPesquisaAux.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPesquisaAux.setNextFocusableComponent(btnPesquisaAuxiliar);
        txtPesquisaAux.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesquisaAuxFocusLost(evt);
            }
        });
        txtPesquisaAux.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaAuxActionPerformed(evt);
            }
        });

        scrlpAuxiliares.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scrlpAuxiliares.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        tblAuxiliares.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblAuxiliares.setModel(tabelaPadraoAuxiliar);
        scrlpAuxiliares.setViewportView(tblAuxiliares);

        lblPesquisaDentista1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblPesquisaDentista1.setText("Pesquisar por nome da(o) Auxiliar");

        btnPesquisaAuxiliar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisaAuxiliar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa_.png"))); // NOI18N
        btnPesquisaAuxiliar.setText("Pesquisar");
        btnPesquisaAuxiliar.setNextFocusableComponent(btnResetarTabelaAuxiliar);
        btnPesquisaAuxiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaAuxiliarActionPerformed(evt);
            }
        });

        btnResetarTabelaAuxiliar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnResetarTabelaAuxiliar.setText("Resetar Tabela");
        btnResetarTabelaAuxiliar.setNextFocusableComponent(tabOpcoes);
        btnResetarTabelaAuxiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetarTabelaAuxiliarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAuxiliaresLayout = new javax.swing.GroupLayout(pnlAuxiliares);
        pnlAuxiliares.setLayout(pnlAuxiliaresLayout);
        pnlAuxiliaresLayout.setHorizontalGroup(
            pnlAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuxiliaresLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAuxiliaresLayout.createSequentialGroup()
                        .addComponent(btnCadastrarNovoAux, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlAuxiliaresLayout.createSequentialGroup()
                                .addComponent(btnPesquisaAuxiliar)
                                .addGap(18, 18, 18)
                                .addComponent(btnResetarTabelaAuxiliar))
                            .addGroup(pnlAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPesquisaDentista1)
                                .addComponent(txtPesquisaAux, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(scrlpAuxiliares, javax.swing.GroupLayout.DEFAULT_SIZE, 999, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlAuxiliaresLayout.setVerticalGroup(
            pnlAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuxiliaresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPesquisaDentista1)
                .addGap(5, 5, 5)
                .addGroup(pnlAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAuxiliaresLayout.createSequentialGroup()
                        .addComponent(txtPesquisaAux, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPesquisaAuxiliar)
                            .addComponent(btnResetarTabelaAuxiliar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(scrlpAuxiliares, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(pnlAuxiliaresLayout.createSequentialGroup()
                        .addComponent(btnCadastrarNovoAux, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        btnCadastrarNovoAux.getAccessibleContext().setAccessibleName("Cadastrar novo(a) auxiliar");
        btnCadastrarNovoAux.getAccessibleContext().setAccessibleDescription("Clique para adicionar um novo(a) auxiliar");
        txtPesquisaAux.getAccessibleContext().setAccessibleName("Barra de pesquisa");
        txtPesquisaAux.getAccessibleContext().setAccessibleDescription("Digite um valor aqui para filtrar os valores da tabela abaixo");

        tabOpcoes.addTab("Auxiliares", pnlAuxiliares);

        pnlPacientes.setBackground(new java.awt.Color(255, 255, 255));
        pnlPacientes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnObservacoes.setBackground(new java.awt.Color(40, 75, 165));
        btnObservacoes.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnObservacoes.setForeground(new java.awt.Color(255, 255, 255));
        btnObservacoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnObservacoes.setText("Observações");
        btnObservacoes.setToolTipText("Cadastrar ou alterar observaçoes");
        btnObservacoes.setNextFocusableComponent(btnOdontograma);
        btnObservacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObservacoesActionPerformed(evt);
            }
        });

        btnCadastrarNovoPac.setBackground(new java.awt.Color(40, 75, 165));
        btnCadastrarNovoPac.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCadastrarNovoPac.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrarNovoPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnCadastrarNovoPac.setText("Cadastrar novo(a)");
        btnCadastrarNovoPac.setToolTipText("Cadastra novo(a) paciente");
        btnCadastrarNovoPac.setNextFocusableComponent(btnObservacoes);
        btnCadastrarNovoPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarNovoPacActionPerformed(evt);
            }
        });

        txtPesquisaPac.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtPesquisaPac.setToolTipText("Barra de pesquisa");
        txtPesquisaPac.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPesquisaPac.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPesquisaPac.setNextFocusableComponent(btnPesquisaPaciente);
        txtPesquisaPac.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesquisaPacFocusLost(evt);
            }
        });
        txtPesquisaPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaPacActionPerformed(evt);
            }
        });

        scrlpPacientes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scrlpPacientes.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        tblPacientes.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblPacientes.setModel(tabelaPadraoPaciente);
        scrlpPacientes.setViewportView(tblPacientes);

        btnOdontograma.setBackground(new java.awt.Color(40, 75, 165));
        btnOdontograma.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnOdontograma.setForeground(new java.awt.Color(255, 255, 255));
        btnOdontograma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnOdontograma.setText("Odontograma");
        btnOdontograma.setToolTipText("Cadastre ou altere um odontograma");
        btnOdontograma.setNextFocusableComponent(txtPesquisaPac);
        btnOdontograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdontogramaActionPerformed(evt);
            }
        });

        lblPesquisaPaciente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblPesquisaPaciente.setText("Pesquisar por nome da(o) Paciente");

        btnResetaTabelaPaciente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnResetaTabelaPaciente.setText("Resetar Tabela");
        btnResetaTabelaPaciente.setNextFocusableComponent(tabOpcoes);
        btnResetaTabelaPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetaTabelaPacienteActionPerformed(evt);
            }
        });

        btnPesquisaPaciente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisaPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa_.png"))); // NOI18N
        btnPesquisaPaciente.setText("Pesquisar");
        btnPesquisaPaciente.setNextFocusableComponent(btnResetaTabelaPaciente);
        btnPesquisaPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaPacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPacientesLayout = new javax.swing.GroupLayout(pnlPacientes);
        pnlPacientes.setLayout(pnlPacientesLayout);
        pnlPacientesLayout.setHorizontalGroup(
            pnlPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPacientesLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPacientesLayout.createSequentialGroup()
                        .addComponent(btnCadastrarNovoPac, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnObservacoes)
                        .addGap(18, 18, 18)
                        .addComponent(btnOdontograma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                        .addGroup(pnlPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPacientesLayout.createSequentialGroup()
                                .addComponent(btnPesquisaPaciente)
                                .addGap(18, 18, 18)
                                .addComponent(btnResetaTabelaPaciente))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPesquisaPaciente)
                                .addComponent(txtPesquisaPac, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(scrlpPacientes))
                .addContainerGap())
        );
        pnlPacientesLayout.setVerticalGroup(
            pnlPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPacientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPesquisaPaciente)
                .addGap(5, 5, 5)
                .addGroup(pnlPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPacientesLayout.createSequentialGroup()
                        .addComponent(txtPesquisaPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetaTabelaPaciente)
                            .addComponent(btnPesquisaPaciente))
                        .addGap(15, 15, 15)
                        .addComponent(scrlpPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCadastrarNovoPac, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnOdontograma, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        btnObservacoes.getAccessibleContext().setAccessibleDescription("Cadastrar ou alterar observaçoes sobre um paciente");
        btnCadastrarNovoPac.getAccessibleContext().setAccessibleName("Cadastrar novo(a) paciente");
        btnCadastrarNovoPac.getAccessibleContext().setAccessibleDescription("Clique para adicionar um novo(a) auxiliar");
        txtPesquisaPac.getAccessibleContext().setAccessibleName("Barra de pesquisa");
        txtPesquisaPac.getAccessibleContext().setAccessibleDescription("Digite um valor aqui para filtrar os valores da tabela abaixo");
        btnOdontograma.getAccessibleContext().setAccessibleDescription("Cadastre ou altere um odontograma de um(a) paciente");

        tabOpcoes.addTab("Pacientes", pnlPacientes);

        pnlAtendimentos.setBackground(new java.awt.Color(255, 255, 255));
        pnlAtendimentos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnFinalizarAtend.setBackground(new java.awt.Color(40, 75, 165));
        btnFinalizarAtend.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnFinalizarAtend.setForeground(new java.awt.Color(255, 255, 255));
        btnFinalizarAtend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/check_.png"))); // NOI18N
        btnFinalizarAtend.setText("Finalizar atendimento");
        btnFinalizarAtend.setToolTipText("Finaliza um atendimento");
        btnFinalizarAtend.setNextFocusableComponent(btnReceita);
        btnFinalizarAtend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarAtendActionPerformed(evt);
            }
        });

        btnCadastrarNovoAtend.setBackground(new java.awt.Color(40, 75, 165));
        btnCadastrarNovoAtend.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCadastrarNovoAtend.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrarNovoAtend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnCadastrarNovoAtend.setText("Cadastrar novo");
        btnCadastrarNovoAtend.setToolTipText("Cadastra novo atendimento");
        btnCadastrarNovoAtend.setNextFocusableComponent(btnFinalizarAtend);
        btnCadastrarNovoAtend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarNovoAtendActionPerformed(evt);
            }
        });

        scrlpAtendimentos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scrlpAtendimentos.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        tblAtendimentos.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblAtendimentos.setModel(tabelaPadraoAtendimento);
        scrlpAtendimentos.setViewportView(tblAtendimentos);

        btnReceita.setBackground(new java.awt.Color(40, 75, 165));
        btnReceita.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnReceita.setForeground(new java.awt.Color(255, 255, 255));
        btnReceita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnReceita.setText("Gerar receita");
        btnReceita.setToolTipText("Gera uma nova receita");
        btnReceita.setNextFocusableComponent(btnVerReceitas);
        btnReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceitaActionPerformed(evt);
            }
        });

        btnVerReceitas.setBackground(new java.awt.Color(40, 75, 165));
        btnVerReceitas.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnVerReceitas.setForeground(new java.awt.Color(255, 255, 255));
        btnVerReceitas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lista_.png"))); // NOI18N
        btnVerReceitas.setText("Ver receitas");
        btnVerReceitas.setToolTipText("Gera uma nova receita");
        btnVerReceitas.setNextFocusableComponent(txtPesquisaAtend);
        btnVerReceitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerReceitasActionPerformed(evt);
            }
        });

        btnPesquisaAtendimento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisaAtendimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa_.png"))); // NOI18N
        btnPesquisaAtendimento.setText("Pesquisar");
        btnPesquisaAtendimento.setNextFocusableComponent(btnResetaTabelaAtendimento);
        btnPesquisaAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaAtendimentoActionPerformed(evt);
            }
        });

        txtPesquisaAtend.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtPesquisaAtend.setToolTipText("Barra de pesquisa");
        txtPesquisaAtend.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPesquisaAtend.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPesquisaAtend.setNextFocusableComponent(btnPesquisaAtendimento);
        txtPesquisaAtend.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesquisaAtendFocusLost(evt);
            }
        });
        txtPesquisaAtend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaAtendActionPerformed(evt);
            }
        });

        lblPesquisaAtendimento.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblPesquisaAtendimento.setText("Pesquisar por nome da(o) Paciente");

        btnResetaTabelaAtendimento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnResetaTabelaAtendimento.setText("Resetar Tabela");
        btnResetaTabelaAtendimento.setNextFocusableComponent(tabOpcoes);
        btnResetaTabelaAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetaTabelaAtendimentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAtendimentosLayout = new javax.swing.GroupLayout(pnlAtendimentos);
        pnlAtendimentos.setLayout(pnlAtendimentosLayout);
        pnlAtendimentosLayout.setHorizontalGroup(
            pnlAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAtendimentosLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrlpAtendimentos)
                    .addGroup(pnlAtendimentosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCadastrarNovoAtend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFinalizarAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReceita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVerReceitas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAtendimentosLayout.createSequentialGroup()
                                .addComponent(btnPesquisaAtendimento)
                                .addGap(18, 18, 18)
                                .addComponent(btnResetaTabelaAtendimento))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPesquisaAtendimento)
                                .addComponent(txtPesquisaAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        pnlAtendimentosLayout.setVerticalGroup(
            pnlAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAtendimentosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPesquisaAtendimento)
                .addGap(5, 5, 5)
                .addGroup(pnlAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAtendimentosLayout.createSequentialGroup()
                        .addComponent(txtPesquisaAtend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetaTabelaAtendimento)
                            .addComponent(btnPesquisaAtendimento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrlpAtendimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCadastrarNovoAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFinalizarAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReceita, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVerReceitas, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnFinalizarAtend.getAccessibleContext().setAccessibleDescription("Clique para finalizar um atendimento");
        btnCadastrarNovoAtend.getAccessibleContext().setAccessibleName("Cadastrar novo atendimento");
        btnCadastrarNovoAtend.getAccessibleContext().setAccessibleDescription("Clique para adicionar um novo atendimento");
        btnReceita.getAccessibleContext().setAccessibleDescription("Clique para gera uma nova receita para um atendimento");

        tabOpcoes.addTab("Atendimentos", pnlAtendimentos);

        pnlMateriais.setBackground(new java.awt.Color(255, 255, 255));
        pnlMateriais.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnCadastrarNovoMat.setBackground(new java.awt.Color(40, 75, 165));
        btnCadastrarNovoMat.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCadastrarNovoMat.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrarNovoMat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnCadastrarNovoMat.setText("Cadastrar novo");
        btnCadastrarNovoMat.setToolTipText("Cadastra novo material");
        btnCadastrarNovoMat.setNextFocusableComponent(btnAtualizaEstoque);
        btnCadastrarNovoMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarNovoMatActionPerformed(evt);
            }
        });

        scrlpMateriais.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scrlpMateriais.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        tblMateriais.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblMateriais.setModel(tabelaPadraoMaterial);
        scrlpMateriais.setViewportView(tblMateriais);

        btnAtualizaEstoque.setBackground(new java.awt.Color(40, 75, 165));
        btnAtualizaEstoque.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAtualizaEstoque.setForeground(new java.awt.Color(255, 255, 255));
        btnAtualizaEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/caixas_.png"))); // NOI18N
        btnAtualizaEstoque.setText("Atualizar Estoque");
        btnAtualizaEstoque.setToolTipText("Atualizar estoque de um material");
        btnAtualizaEstoque.setNextFocusableComponent(txtPesquisaMat);
        btnAtualizaEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizaEstoqueActionPerformed(evt);
            }
        });

        btnPesquisaMaterial.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisaMaterial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa_.png"))); // NOI18N
        btnPesquisaMaterial.setText("Pesquisar");
        btnPesquisaMaterial.setNextFocusableComponent(btnResetaTabelaMaterial);
        btnPesquisaMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaMaterialActionPerformed(evt);
            }
        });

        txtPesquisaMat.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtPesquisaMat.setToolTipText("Barra de pesquisa");
        txtPesquisaMat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPesquisaMat.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPesquisaMat.setNextFocusableComponent(btnPesquisaMaterial);
        txtPesquisaMat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesquisaMatFocusLost(evt);
            }
        });
        txtPesquisaMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaMatActionPerformed(evt);
            }
        });

        lblPesquisaMaterial.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblPesquisaMaterial.setText("Pesquisar por nome do Material");

        btnResetaTabelaMaterial.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnResetaTabelaMaterial.setText("Resetar Tabela");
        btnResetaTabelaMaterial.setNextFocusableComponent(tabOpcoes);
        btnResetaTabelaMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetaTabelaMaterialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMateriaisLayout = new javax.swing.GroupLayout(pnlMateriais);
        pnlMateriais.setLayout(pnlMateriaisLayout);
        pnlMateriaisLayout.setHorizontalGroup(
            pnlMateriaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMateriaisLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlMateriaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrlpMateriais, javax.swing.GroupLayout.DEFAULT_SIZE, 999, Short.MAX_VALUE)
                    .addGroup(pnlMateriaisLayout.createSequentialGroup()
                        .addComponent(btnCadastrarNovoMat, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAtualizaEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlMateriaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMateriaisLayout.createSequentialGroup()
                                .addComponent(btnPesquisaMaterial)
                                .addGap(18, 18, 18)
                                .addComponent(btnResetaTabelaMaterial))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMateriaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPesquisaMaterial)
                                .addComponent(txtPesquisaMat, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        pnlMateriaisLayout.setVerticalGroup(
            pnlMateriaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMateriaisLayout.createSequentialGroup()
                .addGroup(pnlMateriaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMateriaisLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(pnlMateriaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCadastrarNovoMat, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAtualizaEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlMateriaisLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblPesquisaMaterial)
                        .addGap(5, 5, 5)
                        .addComponent(txtPesquisaMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMateriaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetaTabelaMaterial)
                            .addComponent(btnPesquisaMaterial))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrlpMateriais, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnCadastrarNovoMat.getAccessibleContext().setAccessibleName("Cadastrar novo material");
        btnCadastrarNovoMat.getAccessibleContext().setAccessibleDescription("Clique para adicionar um novo material");
        btnAtualizaEstoque.getAccessibleContext().setAccessibleDescription("Clique para atualizar o estoque de um material");

        tabOpcoes.addTab("Materiais", pnlMateriais);

        pnlFinanceiro.setBackground(new java.awt.Color(255, 255, 255));
        pnlFinanceiro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnCadastrarNovoFinan.setBackground(new java.awt.Color(40, 75, 165));
        btnCadastrarNovoFinan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCadastrarNovoFinan.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrarNovoFinan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/mais_.png"))); // NOI18N
        btnCadastrarNovoFinan.setText("Cadastrar novo");
        btnCadastrarNovoFinan.setToolTipText("Cadastra novo item financeiro");
        btnCadastrarNovoFinan.setNextFocusableComponent(btnCalculaBalancoFinal);
        btnCadastrarNovoFinan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarNovoFinanActionPerformed(evt);
            }
        });

        scrlpFinanceiro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scrlpFinanceiro.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        tblFinanceiro.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblFinanceiro.setModel(tabelaPadraoFinanceiro);
        scrlpFinanceiro.setViewportView(tblFinanceiro);

        btnCalculaBalancoFinal.setBackground(new java.awt.Color(40, 75, 165));
        btnCalculaBalancoFinal.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCalculaBalancoFinal.setForeground(new java.awt.Color(255, 255, 255));
        btnCalculaBalancoFinal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/dinheiro_.png"))); // NOI18N
        btnCalculaBalancoFinal.setText("Calcula Balanço Final");
        btnCalculaBalancoFinal.setToolTipText("Calcula o balanço final da clínica");
        btnCalculaBalancoFinal.setNextFocusableComponent(txtPesquisaFinan);
        btnCalculaBalancoFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculaBalancoFinalActionPerformed(evt);
            }
        });

        lblPesquisaFinanceiro.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblPesquisaFinanceiro.setText("Pesquisar por nome do Gasto ou Lucro");

        btnResetaTabelaFinanceiro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnResetaTabelaFinanceiro.setText("Resetar Tabela");
        btnResetaTabelaFinanceiro.setNextFocusableComponent(tabOpcoes);
        btnResetaTabelaFinanceiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetaTabelaFinanceiroActionPerformed(evt);
            }
        });

        btnPesquisaFinanceiro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisaFinanceiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa_.png"))); // NOI18N
        btnPesquisaFinanceiro.setText("Pesquisar");
        btnPesquisaFinanceiro.setNextFocusableComponent(btnResetaTabelaFinanceiro);
        btnPesquisaFinanceiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaFinanceiroActionPerformed(evt);
            }
        });

        txtPesquisaFinan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtPesquisaFinan.setToolTipText("Barra de pesquisa");
        txtPesquisaFinan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPesquisaFinan.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPesquisaFinan.setNextFocusableComponent(btnPesquisaFinanceiro);
        txtPesquisaFinan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesquisaFinanFocusLost(evt);
            }
        });
        txtPesquisaFinan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaFinanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFinanceiroLayout = new javax.swing.GroupLayout(pnlFinanceiro);
        pnlFinanceiro.setLayout(pnlFinanceiroLayout);
        pnlFinanceiroLayout.setHorizontalGroup(
            pnlFinanceiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFinanceiroLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlFinanceiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrlpFinanceiro, javax.swing.GroupLayout.DEFAULT_SIZE, 999, Short.MAX_VALUE)
                    .addGroup(pnlFinanceiroLayout.createSequentialGroup()
                        .addComponent(btnCadastrarNovoFinan, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCalculaBalancoFinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlFinanceiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFinanceiroLayout.createSequentialGroup()
                                .addComponent(btnPesquisaFinanceiro)
                                .addGap(18, 18, 18)
                                .addComponent(btnResetaTabelaFinanceiro))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFinanceiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPesquisaFinanceiro)
                                .addComponent(txtPesquisaFinan, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        pnlFinanceiroLayout.setVerticalGroup(
            pnlFinanceiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFinanceiroLayout.createSequentialGroup()
                .addGroup(pnlFinanceiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFinanceiroLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(pnlFinanceiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCadastrarNovoFinan, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCalculaBalancoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlFinanceiroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblPesquisaFinanceiro)
                        .addGap(5, 5, 5)
                        .addComponent(txtPesquisaFinan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFinanceiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetaTabelaFinanceiro)
                            .addComponent(btnPesquisaFinanceiro))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrlpFinanceiro, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnCalculaBalancoFinal.getAccessibleContext().setAccessibleDescription("Clique para obter o balanço final da clínica");

        tabOpcoes.addTab("Financeiro", pnlFinanceiro);

        javax.swing.GroupLayout pnlTelaPrincipalLayout = new javax.swing.GroupLayout(pnlTelaPrincipal);
        pnlTelaPrincipal.setLayout(pnlTelaPrincipalLayout);
        pnlTelaPrincipalLayout.setHorizontalGroup(
            pnlTelaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTelaPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, 1025, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTelaPrincipalLayout.setVerticalGroup(
            pnlTelaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTelaPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabOpcoes)
                .addContainerGap())
        );

        tabOpcoes.getAccessibleContext().setAccessibleName("Tela Principal");
        tabOpcoes.getAccessibleContext().setAccessibleDescription("Tela principal da aplicação, selecione uma aba.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTelaPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTelaPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarNovoDentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarNovoDentActionPerformed
        TelaCadastroDentista telaCadastro = new TelaCadastroDentista();
        telaCadastro.MostraTela(this);
    }//GEN-LAST:event_btnCadastrarNovoDentActionPerformed

    private void txtPesquisaDentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaDentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaDentActionPerformed

    private void txtPesquisaDentFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisaDentFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaDentFocusLost

    private void btnCadastrarNovoAuxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarNovoAuxActionPerformed
        TelaCadastroAuxiliar telaCadastro = new TelaCadastroAuxiliar();
        telaCadastro.MostraTela(this);
    }//GEN-LAST:event_btnCadastrarNovoAuxActionPerformed

    private void txtPesquisaAuxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisaAuxFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaAuxFocusLost

    private void txtPesquisaAuxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaAuxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaAuxActionPerformed

    private void btnObservacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObservacoesActionPerformed
        if (tblPacientes.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um(a) Paciente para adicionar ou alterar observações.");
        } else {
            TelaCadastroObservacoes telaCadastro = new TelaCadastroObservacoes();
            telaCadastro.MostraTela(this);
            telaCadastro.insereObservacaoAnterior();
        }
    }//GEN-LAST:event_btnObservacoesActionPerformed

    private void btnCadastrarNovoPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarNovoPacActionPerformed
        TelaCadastroPaciente telaCadastro = new TelaCadastroPaciente();
        telaCadastro.MostraTela(this);
    }//GEN-LAST:event_btnCadastrarNovoPacActionPerformed

    private void txtPesquisaPacFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisaPacFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaPacFocusLost

    private void txtPesquisaPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaPacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaPacActionPerformed

    private void btnFinalizarAtendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarAtendActionPerformed
        if (tblAtendimentos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Atendimento para finalizá-lo.");
        } else {
            TelaCadastroAtendimento telaCadastro = new TelaCadastroAtendimento();
            telaCadastro.MostraTela(this);
            telaCadastro.insereAtendimentoSelecionado();
        }
    }//GEN-LAST:event_btnFinalizarAtendActionPerformed

    private void btnCadastrarNovoAtendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarNovoAtendActionPerformed
        TelaCadastroAtendimento telaCadastro = new TelaCadastroAtendimento();
        telaCadastro.MostraTela(this);
    }//GEN-LAST:event_btnCadastrarNovoAtendActionPerformed

    private void btnCadastrarNovoMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarNovoMatActionPerformed
        TelaCadastroMaterial telaCadastro = new TelaCadastroMaterial();
        telaCadastro.MostraTela(this);
    }//GEN-LAST:event_btnCadastrarNovoMatActionPerformed

    private void btnCadastrarNovoFinanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarNovoFinanActionPerformed
        TelaCadastroFinanceiro telaCadastro = new TelaCadastroFinanceiro();
        telaCadastro.MostraTela(this);
    }//GEN-LAST:event_btnCadastrarNovoFinanActionPerformed

    private void btnAdicionarEspecialidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarEspecialidadeActionPerformed
        if (tblDentistas.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um(a) Cirurgião Dentista para adicionar Especialidade(s).");
        } else {
            TelaCadastroEspecialidade telaCadastro = new TelaCadastroEspecialidade();
            telaCadastro.MostraTela(this);
        }
    }//GEN-LAST:event_btnAdicionarEspecialidadeActionPerformed

    private void btnOdontogramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdontogramaActionPerformed
        if (tblPacientes.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Paciente para adicionar/alterar seu Odontograma.");
        } else {
            TelaCadastroOdontograma telaCadastro = new TelaCadastroOdontograma();
            telaCadastro.MostraTela(this);
            telaCadastro.insereOdontogramaDoPaciente();
        }
    }//GEN-LAST:event_btnOdontogramaActionPerformed

    private void btnReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceitaActionPerformed
        if (tblAtendimentos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Atendimento para adicionar Receita(s).");
        } else {
            TelaCadastroReceita telaCadastro = new TelaCadastroReceita();
            telaCadastro.MostraTela(this);
        }
    }//GEN-LAST:event_btnReceitaActionPerformed

    private void btnAtualizaEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizaEstoqueActionPerformed
        if (tblMateriais.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Material para atualizar o estoque.");
        } else if (Integer.parseInt(String.valueOf(tblMateriais.getValueAt(tblMateriais.getSelectedRow(), 5))) <= 0) {
            JOptionPane.showMessageDialog(null, "Estoque do material selecionado já esgotado.");
        } else {
            TelaAtualizaEstoque telaCadastro = new TelaAtualizaEstoque();
            telaCadastro.MostraTela(this);
        }
    }//GEN-LAST:event_btnAtualizaEstoqueActionPerformed

    private void btnCalculaBalancoFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculaBalancoFinalActionPerformed
        calculaBalancoFinal();
    }//GEN-LAST:event_btnCalculaBalancoFinalActionPerformed

    private void btnVerReceitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerReceitasActionPerformed
        if (tblAtendimentos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Atendimento para visualizar sua(s) receita(s).");
        } else {
            TelaListagemReceitas telaCadastro = new TelaListagemReceitas();
            telaCadastro.MostraTela(this);
            telaCadastro.alimentaTabelaReceitas();
        }
    }//GEN-LAST:event_btnVerReceitasActionPerformed

    private void btnPesquisaDentistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaDentistaActionPerformed
        pesquisaDentista();
    }//GEN-LAST:event_btnPesquisaDentistaActionPerformed

    private void btnResetarTabelaDentistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetarTabelaDentistaActionPerformed
        atualizaTabelaDentista();
        txtPesquisaDent.setText("");
    }//GEN-LAST:event_btnResetarTabelaDentistaActionPerformed

    private void btnPesquisaAuxiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaAuxiliarActionPerformed
        pesquisaAuxiliar();
    }//GEN-LAST:event_btnPesquisaAuxiliarActionPerformed

    private void btnResetarTabelaAuxiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetarTabelaAuxiliarActionPerformed
        atualizaTabelaAuxiliar();
        txtPesquisaAux.setText("");
    }//GEN-LAST:event_btnResetarTabelaAuxiliarActionPerformed

    private void btnPesquisaPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaPacienteActionPerformed
        pesquisaPaciente();
    }//GEN-LAST:event_btnPesquisaPacienteActionPerformed

    private void btnResetaTabelaPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetaTabelaPacienteActionPerformed
        atualizaTabelaPaciente();
        txtPesquisaPac.setText("");
    }//GEN-LAST:event_btnResetaTabelaPacienteActionPerformed

    private void btnPesquisaAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaAtendimentoActionPerformed
        pesquisaAtendimento();
    }//GEN-LAST:event_btnPesquisaAtendimentoActionPerformed

    private void txtPesquisaAtendFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisaAtendFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaAtendFocusLost

    private void txtPesquisaAtendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaAtendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaAtendActionPerformed

    private void btnResetaTabelaAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetaTabelaAtendimentoActionPerformed
        atualizaTabelaAtendimento();
        txtPesquisaAtend.setText("");
    }//GEN-LAST:event_btnResetaTabelaAtendimentoActionPerformed

    private void btnPesquisaMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaMaterialActionPerformed
        pesquisaMaterial();
    }//GEN-LAST:event_btnPesquisaMaterialActionPerformed

    private void txtPesquisaMatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisaMatFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaMatFocusLost

    private void txtPesquisaMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaMatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaMatActionPerformed

    private void btnResetaTabelaMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetaTabelaMaterialActionPerformed
        atualizaTabelaMaterial();
        txtPesquisaMat.setText("");
    }//GEN-LAST:event_btnResetaTabelaMaterialActionPerformed

    private void btnResetaTabelaFinanceiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetaTabelaFinanceiroActionPerformed
        atualizaTabelaFinanceiro();
        txtPesquisaFinan.setText("");
    }//GEN-LAST:event_btnResetaTabelaFinanceiroActionPerformed

    private void btnPesquisaFinanceiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaFinanceiroActionPerformed
        pesquisaFinanceiro();
    }//GEN-LAST:event_btnPesquisaFinanceiroActionPerformed

    private void txtPesquisaFinanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisaFinanFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaFinanFocusLost

    private void txtPesquisaFinanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaFinanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaFinanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarEspecialidade;
    private javax.swing.JButton btnAtualizaEstoque;
    private javax.swing.JButton btnCadastrarNovoAtend;
    private javax.swing.JButton btnCadastrarNovoAux;
    private javax.swing.JButton btnCadastrarNovoDent;
    private javax.swing.JButton btnCadastrarNovoFinan;
    private javax.swing.JButton btnCadastrarNovoMat;
    private javax.swing.JButton btnCadastrarNovoPac;
    private javax.swing.JButton btnCalculaBalancoFinal;
    private javax.swing.JButton btnFinalizarAtend;
    private javax.swing.JButton btnObservacoes;
    private javax.swing.JButton btnOdontograma;
    private javax.swing.JButton btnPesquisaAtendimento;
    private javax.swing.JButton btnPesquisaAuxiliar;
    private javax.swing.JButton btnPesquisaDentista;
    private javax.swing.JButton btnPesquisaFinanceiro;
    private javax.swing.JButton btnPesquisaMaterial;
    private javax.swing.JButton btnPesquisaPaciente;
    private javax.swing.JButton btnReceita;
    private javax.swing.JButton btnResetaTabelaAtendimento;
    private javax.swing.JButton btnResetaTabelaFinanceiro;
    private javax.swing.JButton btnResetaTabelaMaterial;
    private javax.swing.JButton btnResetaTabelaPaciente;
    private javax.swing.JButton btnResetarTabelaAuxiliar;
    private javax.swing.JButton btnResetarTabelaDentista;
    private javax.swing.JButton btnVerReceitas;
    private javax.swing.JLabel lblPesquisaAtendimento;
    private javax.swing.JLabel lblPesquisaDentista;
    private javax.swing.JLabel lblPesquisaDentista1;
    private javax.swing.JLabel lblPesquisaFinanceiro;
    private javax.swing.JLabel lblPesquisaMaterial;
    private javax.swing.JLabel lblPesquisaPaciente;
    private javax.swing.JPanel pnlAtendimentos;
    private javax.swing.JPanel pnlAuxiliares;
    private javax.swing.JPanel pnlCirurgioesDentistas;
    private javax.swing.JPanel pnlFinanceiro;
    private javax.swing.JPanel pnlMateriais;
    private javax.swing.JPanel pnlPacientes;
    private javax.swing.JPanel pnlTelaPrincipal;
    private javax.swing.JScrollPane scrlpAtendimentos;
    private javax.swing.JScrollPane scrlpAuxiliares;
    private javax.swing.JScrollPane scrlpDentistas;
    private javax.swing.JScrollPane scrlpFinanceiro;
    private javax.swing.JScrollPane scrlpMateriais;
    private javax.swing.JScrollPane scrlpPacientes;
    private javax.swing.JTabbedPane tabOpcoes;
    private javax.swing.JTable tblAtendimentos;
    private javax.swing.JTable tblAuxiliares;
    private javax.swing.JTable tblDentistas;
    private javax.swing.JTable tblFinanceiro;
    private javax.swing.JTable tblMateriais;
    private javax.swing.JTable tblPacientes;
    private javax.swing.JTextField txtPesquisaAtend;
    private javax.swing.JTextField txtPesquisaAux;
    private javax.swing.JTextField txtPesquisaDent;
    private javax.swing.JTextField txtPesquisaFinan;
    private javax.swing.JTextField txtPesquisaMat;
    private javax.swing.JTextField txtPesquisaPac;
    // End of variables declaration//GEN-END:variables

    /**
     * Preenche a tabela de Dentistas com os dados recebido do banco de dados
     */
    public void atualizaTabelaDentista() {
        DentistaDAO dentistaDao = new DentistaDAO();
        EspecialidadeDAO especialidadeDao = new EspecialidadeDAO();
        List<Dentista> listaDentistas = dentistaDao.listar();
        DefaultTableModel tabelaDentistas = (DefaultTableModel) tblDentistas.getModel();
        tblDentistas.setRowSorter(new TableRowSorter(tabelaDentistas));

        tabelaDentistas.setNumRows(0);

        for (Dentista d : listaDentistas) {
            Object[] obj = new Object[]{
                d.getId(),
                d.getNome(),
                reverterData(String.valueOf(d.getNascimento())),
                d.getCpf(),
                d.getEndereco(),
                d.getTelefone(),
                d.getEmail(),
                d.getUfCro(),
                d.getCro(),
                especialidadeDao.listar(d.getId())
            };
            tabelaDentistas.addRow(obj);
        }
        dentistaDao.desconectar();
        especialidadeDao.desconectar();
    }

    /**
     * Filtra a lista de dentistas de acordo com a pesquisa
     */
    public void pesquisaDentista() {
        DentistaDAO dentistaDao = new DentistaDAO();
        String nome = txtPesquisaDent.getText();
        EspecialidadeDAO especialidadeDao = new EspecialidadeDAO();
        List<Dentista> listaDentistas = dentistaDao.pesquisaNome(nome);
        DefaultTableModel tabelaDentistas = (DefaultTableModel) tblDentistas.getModel();
        tblDentistas.setRowSorter(new TableRowSorter(tabelaDentistas));

        tabelaDentistas.setNumRows(0);

        for (Dentista d : listaDentistas) {
            Object[] obj = new Object[]{
                d.getId(),
                d.getNome(),
                reverterData(String.valueOf(d.getNascimento())),
                d.getCpf(),
                d.getEndereco(),
                d.getTelefone(),
                d.getEmail(),
                d.getUfCro(),
                d.getCro(),
                especialidadeDao.listar(d.getId())
            };
            tabelaDentistas.addRow(obj);
        }
        dentistaDao.desconectar();
        especialidadeDao.desconectar();
    }

    /**
     * Preenche a tabela de Auxiliares com os dados recebido do banco de dados
     */
    public void atualizaTabelaAuxiliar() {
        AuxiliarDAO dao = new AuxiliarDAO();
        List<Auxiliar> listaAuxiliares = dao.listar();
        DefaultTableModel tabelaAuxiliares = (DefaultTableModel) tblAuxiliares.getModel();
        tblAuxiliares.setRowSorter(new TableRowSorter(tabelaAuxiliares));

        tabelaAuxiliares.setNumRows(0);

        for (Auxiliar a : listaAuxiliares) {
            Object[] obj = new Object[]{
                a.getId(),
                a.getNome(),
                reverterData(String.valueOf(a.getNascimento())),
                a.getCpf(),
                a.getEndereco(),
                a.getTelefone(),
                a.getEmail(),
                a.getUfCro(),
                a.getCro(),};
            tabelaAuxiliares.addRow(obj);
        }
        dao.desconectar();
    }

    /**
     * Filtra a lista de auxiliares de acordo com a pesquisa
     */
    public void pesquisaAuxiliar() {
        AuxiliarDAO dao = new AuxiliarDAO();
        String nome = txtPesquisaAux.getText();
        List<Auxiliar> listaAuxiliares = dao.pesquisaNome(nome);
        DefaultTableModel tabelaAuxiliares = (DefaultTableModel) tblAuxiliares.getModel();
        tblAuxiliares.setRowSorter(new TableRowSorter(tabelaAuxiliares));

        tabelaAuxiliares.setNumRows(0);

        for (Auxiliar a : listaAuxiliares) {
            Object[] obj = new Object[]{
                a.getId(),
                a.getNome(),
                reverterData(String.valueOf(a.getNascimento())),
                a.getCpf(),
                a.getEndereco(),
                a.getTelefone(),
                a.getEmail(),
                a.getUfCro(),
                a.getCro(),};
            tabelaAuxiliares.addRow(obj);
        }
        dao.desconectar();
    }

    /**
     * Preenche a tabela de Materiais com os dados recebido do banco de dados
     */
    public void atualizaTabelaMaterial() {
        MaterialDAO dao = new MaterialDAO();
        List<Material> listaMateriais = dao.listar();
        DefaultTableModel tabelaMateriais = (DefaultTableModel) tblMateriais.getModel();
        tblMateriais.setRowSorter(new TableRowSorter(tabelaMateriais));

        tabelaMateriais.setNumRows(0);

        for (Material m : listaMateriais) {
            Object[] obj = new Object[]{
                m.getId(),
                m.getNome(),
                m.getMarca(),
                m.getQntdComprada(),
                m.getQntdGasta(),
                Integer.toString(m.valorQntdEstoque(m.getQntdComprada(), m.getQntdGasta())),
                m.getValorUnitario(),
                Double.toString(m.valorTotalObjeto(m.getQntdComprada(), m.getValorUnitario()))
            };
            tabelaMateriais.addRow(obj);
        }
        dao.desconectar();
    }
    
    /**
     * Filtra a lista de materiais de acordo com a pesquisa
     */
    public void pesquisaMaterial() {
        MaterialDAO dao = new MaterialDAO();
        String nome = txtPesquisaMat.getText();
        List<Material> listaMateriais = dao.pesquisaMaterial(nome);
        DefaultTableModel tabelaMateriais = (DefaultTableModel) tblMateriais.getModel();
        tblMateriais.setRowSorter(new TableRowSorter(tabelaMateriais));

        tabelaMateriais.setNumRows(0);

        for (Material m : listaMateriais) {
            Object[] obj = new Object[]{
                m.getId(),
                m.getNome(),
                m.getMarca(),
                m.getQntdComprada(),
                m.getQntdGasta(),
                Integer.toString(m.valorQntdEstoque(m.getQntdComprada(), m.getQntdGasta())),
                m.getValorUnitario(),
                Double.toString(m.valorTotalObjeto(m.getQntdComprada(), m.getValorUnitario()))
            };
            tabelaMateriais.addRow(obj);
        }
        dao.desconectar();
    }

    /**
     * Preenche a tabela de Financeiro com os dados recebido do banco de dados
     */
    public void atualizaTabelaFinanceiro() {
        GastoLucroDAO dao = new GastoLucroDAO();
        List<GastoLucro> listaGastosLucros = dao.listar();
        DefaultTableModel tabelaFinanceiro = (DefaultTableModel) tblFinanceiro.getModel();
        tblFinanceiro.setRowSorter(new TableRowSorter(tabelaFinanceiro));

        tabelaFinanceiro.setNumRows(0);

        for (GastoLucro gl : listaGastosLucros) {
            Object[] obj = new Object[]{
                gl.getId(),
                gl.getNome(),
                gl.getTipo(),
                gl.getQuantidade(),
                gl.getValor(),
                gl.valorTotalObjeto(gl.getQuantidade(), gl.getValor())
            };
            tabelaFinanceiro.addRow(obj);
        }
        dao.desconectar();
    }
    
    /**
     * Filtra a lista de financeiro de acordo com a pesquisa
     */
    public void pesquisaFinanceiro() {
        GastoLucroDAO dao = new GastoLucroDAO();
        String nome = txtPesquisaFinan.getText();
        List<GastoLucro> listaGastosLucros = dao.pesquisaNome(nome);
        DefaultTableModel tabelaFinanceiro = (DefaultTableModel) tblFinanceiro.getModel();
        tblFinanceiro.setRowSorter(new TableRowSorter(tabelaFinanceiro));

        tabelaFinanceiro.setNumRows(0);

        for (GastoLucro gl : listaGastosLucros) {
            Object[] obj = new Object[]{
                gl.getId(),
                gl.getNome(),
                gl.getTipo(),
                gl.getQuantidade(),
                gl.getValor(),
                gl.valorTotalObjeto(gl.getQuantidade(), gl.getValor())
            };
            tabelaFinanceiro.addRow(obj);
        }
        dao.desconectar();
    }

    /**
     * Preenche a tabela de Pacientes com os dados recebido do banco de dados
     */
    public void atualizaTabelaPaciente() {
        PacienteDAO pacDao = new PacienteDAO();
        ConvenioDAO conDao = new ConvenioDAO();
        List<Paciente> listaPacientes = pacDao.listar();
        DefaultTableModel tabelaPacientes = (DefaultTableModel) tblPacientes.getModel();
        tblPacientes.setRowSorter(new TableRowSorter(tabelaPacientes));

        tabelaPacientes.setNumRows(0);

        for (Paciente p : listaPacientes) {
            Object[] obj = new Object[]{
                p.getId(),
                p.getNome(),
                reverterData(String.valueOf(p.getNascimento())),
                p.getCpf(),
                p.getRg(),
                p.getEndereco(),
                p.getTelefone(),
                p.getEmail(),
                p.getConvenio().getNome(),
                p.getIndicacao(),
                p.getNomeIndicacao(),
                p.getObservacoes()
            };
            tabelaPacientes.addRow(obj);
        }
        pacDao.desconectar();
        conDao.desconectar();
    }

    /**
     * Filtra a lista de pacientes de acordo com a pesquisa
     */
    public void pesquisaPaciente() {
        PacienteDAO pacDao = new PacienteDAO();
        ConvenioDAO conDao = new ConvenioDAO();
        String nome = txtPesquisaPac.getText();
        List<Paciente> listaPacientes = pacDao.pesquisaNome(nome);
        DefaultTableModel tabelaPacientes = (DefaultTableModel) tblPacientes.getModel();
        tblPacientes.setRowSorter(new TableRowSorter(tabelaPacientes));

        tabelaPacientes.setNumRows(0);

        for (Paciente p : listaPacientes) {
            Object[] obj = new Object[]{
                p.getId(),
                p.getNome(),
                reverterData(String.valueOf(p.getNascimento())),
                p.getCpf(),
                p.getRg(),
                p.getEndereco(),
                p.getTelefone(),
                p.getEmail(),
                p.getConvenio().getNome(),
                p.getIndicacao(),
                p.getNomeIndicacao(),
                p.getObservacoes()
            };
            tabelaPacientes.addRow(obj);
        }
        pacDao.desconectar();
        conDao.desconectar();
    }

    /**
     * Preenche a tabela de Atendimentos com os dados recebido do banco de dados
     */
    public void atualizaTabelaAtendimento() {
        AtendimentoDAO atenDao = new AtendimentoDAO();
        List<Atendimento> listaAtendimentos = atenDao.listar();
        DefaultTableModel tabelaAtendimentos = (DefaultTableModel) tblAtendimentos.getModel();
        tblAtendimentos.setRowSorter(new TableRowSorter(tabelaAtendimentos));

        tabelaAtendimentos.setNumRows(0);

        for (Atendimento a : listaAtendimentos) {
            Object[] obj = new Object[]{
                a.getId(),
                reverterDataHora(String.valueOf(a.getDataHora())),
                a.getPaciente().getNome(),
                a.getNumeroConvenio(),
                a.getEspecialidade().getNome(),
                a.getDentistaMarcado().getNome(),
                a.getDentistaAtendeu().getNome(),
                a.getAuxiliar().getNome(),
                a.getObservacoes(),
                a.getValor(),
                a.getPagamento().getTipo(),
                a.getPagamento().getParcelas(),
                a.getPagamento().getNumeroCartao()
            };
            tabelaAtendimentos.addRow(obj);
        }
        atenDao.desconectar();
    }

    /**
     * Filtra a lista de atendimentos de acordo com a pesquisa
     */
    public void pesquisaAtendimento() {
        AtendimentoDAO atenDao = new AtendimentoDAO();
        PacienteDAO pacDao = new PacienteDAO();
        String nome = txtPesquisaAtend.getText();
        List<Atendimento> listaAtendimentos = atenDao.pesquisaNomePaciente(pacDao.pesquisaNome(nome));
        DefaultTableModel tabelaAtendimentos = (DefaultTableModel) tblAtendimentos.getModel();
        tblAtendimentos.setRowSorter(new TableRowSorter(tabelaAtendimentos));

        tabelaAtendimentos.setNumRows(0);

        for (Atendimento a : listaAtendimentos) {
            Object[] obj = new Object[]{
                a.getId(),
                reverterDataHora(String.valueOf(a.getDataHora())),
                a.getPaciente().getNome(),
                a.getNumeroConvenio(),
                a.getEspecialidade().getNome(),
                a.getDentistaMarcado().getNome(),
                a.getDentistaAtendeu().getNome(),
                a.getAuxiliar().getNome(),
                a.getObservacoes(),
                a.getValor(),
                a.getPagamento().getTipo(),
                a.getPagamento().getParcelas(),
                a.getPagamento().getNumeroCartao()
            };
            tabelaAtendimentos.addRow(obj);
        }
        atenDao.desconectar();
    }

    /**
     * Retorna o ID do Dentista selecionado na tabela
     */
    public int retornaIdDentistaSelecionado() {
        int Id = Integer.parseInt(String.valueOf(tblDentistas.getValueAt(tblDentistas.getSelectedRow(), 0)));
        return Id;
    }

    /**
     * Retorna o ID do Material selecionado na tabela
     */
    public int retornaIdMaterialSelecionado() {
        int Id = Integer.parseInt(String.valueOf(tblMateriais.getValueAt(tblMateriais.getSelectedRow(), 0)));
        return Id;
    }

    /**
     * Retorna o ID do Paciente selecionado na tabela
     */
    public int retornaIdPacienteSelecionado() {
        int Id = Integer.parseInt(String.valueOf(tblPacientes.getValueAt(tblPacientes.getSelectedRow(), 0)));
        return Id;
    }

    /**
     * Retorna o ID do Atendimento selecionado na tabela
     */
    public int retornaIdAtendimentoSelecionado() {
        int Id = Integer.parseInt(String.valueOf(tblAtendimentos.getValueAt(tblAtendimentos.getSelectedRow(), 0)));
        return Id;
    }

    /**
     * Calcula o balanço final
     */
    public void calculaBalancoFinal() {
        int numeroItens = tblFinanceiro.getRowCount();
        double ValorTotalFinal = 0.00;
        for (int i = 0; i < numeroItens; i++) {
            if (tblFinanceiro.getValueAt(i, 2).toString().equals("G")) {
                ValorTotalFinal = ValorTotalFinal - Double.parseDouble(tblFinanceiro.getValueAt(i, 5).toString());
            } else if (tblFinanceiro.getValueAt(i, 2).toString().equals("L")) {
                ValorTotalFinal = ValorTotalFinal + Double.parseDouble(tblFinanceiro.getValueAt(i, 5).toString());
            }
        }
        if (ValorTotalFinal > 0) {
            JOptionPane.showMessageDialog(null, "O balanço final da clínica é de:\n " + ValorTotalFinal + " de LUCRO");
        } else if (ValorTotalFinal < 0) {
            JOptionPane.showMessageDialog(null, "O balanço final da clínica é de:\n " + ValorTotalFinal + " de PREJUÍZO");
        } else if (ValorTotalFinal == 0) {
            JOptionPane.showMessageDialog(null, "O balanço final da clínica é de:\n " + ValorTotalFinal);
        }
    }

    /**
     * Reverte a data recebida pelo banco de dados no formato 'yyyy-MM-dd' para
     * o padrão brasileiro 'dd-MM-yyyy'
     */
    public String reverterData(String data) {
        String ano = data.substring(0, 4);
        String mes = data.substring(5, 7);
        String dia = data.substring(8);
        String dataFinal = dia + "/" + mes + "/" + ano;
        return dataFinal;
    }

    /**
     * Reverte a data recebida pelo banco de dados no formato 'yyyy-MM-ddTHH:mm'
     * para o padrão brasileiro 'dd-MM-yyyy HH:mm'
     */
    public String reverterDataHora(String dataHora) {
        String ano = dataHora.substring(0, 4);
        String mes = dataHora.substring(5, 7);
        String dia = dataHora.substring(8, 10);
        String horario = dataHora.substring(11);
        String dataFinal = dia + "/" + mes + "/" + ano + " " + horario;
        return dataFinal;
    }

    /**
     * Desabilita certos acessos ao sistema caso o usuário que realizou login
     * seja do tipo Dentista.
     */
    public void acessoDentista() {
        tabOpcoes.remove(pnlCirurgioesDentistas);
        tabOpcoes.remove(pnlAuxiliares);
        tabOpcoes.remove(pnlMateriais);
        tabOpcoes.remove(pnlFinanceiro);
    }

    /**
     * Desabilita certos acessos ao sistema caso o usuário que realizou login
     * seja do tipo Auxiliar.
     */
    public void acessoAuxiliar() {
        tabOpcoes.remove(pnlCirurgioesDentistas);
        tabOpcoes.remove(pnlAuxiliares);
        tabOpcoes.remove(pnlPacientes);
        tabOpcoes.remove(pnlFinanceiro);
        tabOpcoes.remove(pnlAtendimentos);
    }

    /**
     * Desabilita certos acessos ao sistema caso o usuário que realizou login
     * seja do tipo Atendente.
     */
    public void acessoAtendente() {
        btnCadastrarNovoDent.setVisible(false);
        btnAdicionarEspecialidade.setVisible(false);
        btnCadastrarNovoAux.setVisible(false);
        btnReceita.setVisible(false);
        btnVerReceitas.setVisible(false);
        btnOdontograma.setVisible(false);
        tabOpcoes.remove(pnlMateriais);
        tabOpcoes.remove(pnlFinanceiro);
    }
}
